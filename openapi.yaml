openapi: 3.0.3
info:
  title: Desa Bantuin API
  description: |
    API untuk aplikasi mobile Desa Bantuin - Sistem pelayanan administrasi desa untuk warga.
    
    ## Fitur Utama
    - Autentikasi warga dengan nomor telepon
    - Pengajuan permintaan dan pelaporan
    - Informasi layanan desa
    - Manajemen profil warga
    
    ## Pengguna Seeded untuk Testing
    ### Warga Users (Mobile App Users)
    - **Warga Test**: `081234567891` / `warga123` (Recommended for testing)
    - **Ahmad Supriadi**: `081234567892` / `password123`
    - **Siti Nurhaliza**: `081234567893` / `password123`
    - **Budi Santoso**: `081234567894` / `password123`
    
    ### Admin User
    - **Administrator**: `081234567890` / `admin123`
    
    **Note**: API autentikasi khusus untuk pengguna mobile dengan role "warga". Admin tidak dapat mengakses endpoint ini.
  version: 1.0.0
  contact:
    name: Desa Bantuin Support
    email: support@desa-bantuin.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://silatlida.serdangbedagaikab.go.id/api
    description: Production server
  - url: http://localhost:8000/api
    description: Development server

tags:
  - name: Authentication
    description: Endpoint untuk autentikasi warga (mobile users)
  - name: User Requests
    description: Manajemen permintaan dan pelaporan warga
  - name: Information
    description: Informasi layanan desa (publik)
  - name: Laporan Types
    description: Jenis-jenis layanan yang tersedia

paths:
  # Authentication Endpoints
  /register:
    post:
      tags:
        - Authentication
      summary: Register new warga user
      description: Mendaftarkan warga baru dengan role "warga" secara otomatis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - phone_number
                - password
                - password_confirmation
              properties:
                name:
                  type: string
                  maxLength: 255
                  example: "Ahmad Supriadi"
                  description: Nama lengkap warga
                email:
                  type: string
                  format: email
                  maxLength: 255
                  example: "ahmad@example.com"
                  description: Email warga
                phone_number:
                  type: string
                  maxLength: 20
                  example: "081234567892"
                  description: Nomor telepon warga
                password:
                  type: string
                  minLength: 8
                  example: "password123"
                  description: Kata sandi
                password_confirmation:
                  type: string
                  example: "password123"
                  description: Konfirmasi kata sandi
      responses:
        '201':
          description: Registrasi berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Registrasi berhasil"
                data:
                  user:
                    id: 1
                    name: "Ahmad Supriadi"
                    email: "ahmad@example.com"
                    phone_number: "081234567892"
                    role: "warga"
                  token: "1|abc123..."
                  token_type: "Bearer"
        '422':
          description: Validasi gagal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /login:
    post:
      tags:
        - Authentication
      summary: Login warga user
      description: Login menggunakan nomor telepon dan kata sandi (hanya untuk role warga)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - password
              properties:
                phone_number:
                  type: string
                  example: "081234567891"
                  description: Nomor telepon warga
                password:
                  type: string
                  example: "warga123"
                  description: Kata sandi warga
      responses:
        '200':
          description: Login berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Login berhasil"
                data:
                  user:
                    id: 2
                    name: "Warga Test"
                    email: "warga@desa-bantuin.com"
                    phone_number: "081234567891"
                    role: "warga"
                  token: "2|def456..."
                  token_type: "Bearer"
        '401':
          description: Nomor telepon atau kata sandi salah
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /profile:
    get:
      tags:
        - Authentication
      summary: Get user profile
      description: Mendapatkan profil warga yang sedang login
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Data profil berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                message: "Data profil berhasil diambil"
                data:
                  user:
                    id: 2
                    name: "Warga Test"
                    email: "warga@desa-bantuin.com"
                    phone_number: "081234567891"
                    role: "warga"
                    avatar_url: null
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Authentication
      summary: Update user profile
      description: Memperbarui profil warga yang sedang login
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                  example: "Warga Test Updated"
                  description: Nama lengkap warga
                email:
                  type: string
                  format: email
                  maxLength: 255
                  example: "warga.updated@desa-bantuin.com"
                  description: Email warga
                phone_number:
                  type: string
                  maxLength: 20
                  example: "081234567895"
                  description: Nomor telepon warga
      responses:
        '200':
          description: Profil berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validasi gagal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /change-password:
    post:
      tags:
        - Authentication
      summary: Change password
      description: Mengubah kata sandi warga
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_password
                - new_password
                - new_password_confirmation
              properties:
                current_password:
                  type: string
                  example: "password123"
                  description: Kata sandi saat ini
                new_password:
                  type: string
                  minLength: 8
                  example: "newpassword123"
                  description: Kata sandi baru
                new_password_confirmation:
                  type: string
                  example: "newpassword123"
                  description: Konfirmasi kata sandi baru
      responses:
        '200':
          description: Kata sandi berhasil diubah
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Kata sandi saat ini salah
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validasi gagal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /refresh:
    post:
      tags:
        - Authentication
      summary: Refresh token
      description: Memperbarui token akses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      description: Logout dan mencabut semua token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # User Requests Endpoints
  /requests:
    get:
      tags:
        - User Requests
      summary: Get user's requests
      description: Mendapatkan daftar permintaan warga dengan pagination dan filtering
      security:
        - bearerAuth: []
      parameters:
        - name: per_page
          in: query
          description: Jumlah item per halaman
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: status
          in: query
          description: Filter berdasarkan status
          required: false
          schema:
            type: string
            enum: [onprocess, accepted, rejected]
        - name: type
          in: query
          description: Filter berdasarkan tipe
          required: false
          schema:
            type: string
            enum: [permintaan, pelaporan]
      responses:
        '200':
          description: Data permintaan berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - User Requests
      summary: Create new request
      description: Membuat permintaan baru
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - laporan_type_id
                - type
                - description
              properties:
                laporan_type_id:
                  type: integer
                  example: 1
                  description: ID jenis layanan
                type:
                  type: string
                  enum: [permintaan, pelaporan]
                  example: "permintaan"
                  description: Tipe permintaan
                description:
                  type: string
                  example: "Saya ingin mengajukan pembuatan KTP baru"
                  description: Deskripsi permintaan
                lampiran:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: File lampiran (opsional, max 5MB per file)
      responses:
        '201':
          description: Permintaan berhasil dibuat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Validasi gagal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /requests/{id}:
    get:
      tags:
        - User Requests
      summary: Get specific request
      description: Mendapatkan detail permintaan tertentu (hanya milik user yang login)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID permintaan
          schema:
            type: integer
      responses:
        '200':
          description: Data permintaan berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Permintaan tidak ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /requests/statistics:
    get:
      tags:
        - User Requests
      summary: Get request statistics
      description: Mendapatkan statistik permintaan warga
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Statistik permintaan berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Token tidak valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Akses ditolak - hanya untuk pengguna mobile (warga)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Information Endpoints
  /information:
    get:
      tags:
        - Information
      summary: Get all information
      description: Mendapatkan semua informasi layanan dengan pagination dan filtering
      parameters:
        - name: per_page
          in: query
          description: Jumlah item per halaman
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: laporan_type_id
          in: query
          description: Filter berdasarkan jenis layanan
          required: false
          schema:
            type: integer
        - name: search
          in: query
          description: Pencarian berdasarkan judul
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /information/{id}:
    get:
      tags:
        - Information
      summary: Get specific information
      description: Mendapatkan detail informasi tertentu
      parameters:
        - name: id
          in: path
          required: true
          description: ID informasi
          schema:
            type: integer
      responses:
        '200':
          description: Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Information not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /information/laporan-type/{laporanTypeId}:
    get:
      tags:
        - Information
      summary: Get information by laporan type
      description: Mendapatkan semua informasi untuk jenis layanan tertentu
      parameters:
        - name: laporanTypeId
          in: path
          required: true
          description: ID jenis layanan
          schema:
            type: integer
      responses:
        '200':
          description: Information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Laporan type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Laporan Types Endpoints
  /laporan-types:
    get:
      tags:
        - Laporan Types
      summary: Get all laporan types
      description: Mendapatkan semua jenis layanan yang tersedia
      responses:
        '200':
          description: Laporan types retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          type: object
          description: Response data

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error message"

    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Validasi gagal"
        errors:
          type: object
          description: Validation error details

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Warga Test"
        email:
          type: string
          format: email
          example: "warga@desa-bantuin.com"
        phone_number:
          type: string
          example: "081234567891"
        role:
          type: string
          example: "warga"
        avatar_url:
          type: string
          nullable: true
          example: null

    UserRequest:
      type: object
      properties:
        id:
          type: integer
          example: 1
        laporan_type:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "KTP"
        type:
          type: string
          enum: [permintaan, pelaporan]
          example: "permintaan"
        description:
          type: string
          example: "Saya ingin mengajukan pembuatan KTP baru"
        status:
          type: string
          enum: [onprocess, accepted, rejected]
          example: "onprocess"
        return_message:
          type: string
          nullable: true
          example: null
        lampiran:
          type: array
          items:
            type: string
          example: ["lampiran/file1.pdf"]
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00.000000Z"

    Information:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Cara Membuat KTP"
        description:
          type: string
          example: "Panduan lengkap untuk membuat KTP baru"
        laporan_type:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "KTP"
        attachment:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
                example: "template-ktp.pdf"
              url:
                type: string
                example: "https://silatlida.serdangbedagaikab.go.id/storage/information-attachments/template-ktp.pdf"
              path:
                type: string
                example: "information-attachments/template-ktp.pdf"
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00.000000Z"

    LaporanType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "KTP"
        description:
          type: string
          nullable: true
          example: "Kartu Tanda Penduduk"
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00.000000Z"

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        total:
          type: integer
          example: 1
        from:
          type: integer
          example: 1
        to:
          type: integer
          example: 1

    RequestStatistics:
      type: object
      properties:
        total:
          type: integer
          example: 5
        onprocess:
          type: integer
          example: 2
        selesai:
          type: integer
          example: 2
        ditolak:
          type: integer
          example: 1
        permintaan:
          type: integer
          example: 3
        pelaporan:
          type: integer
          example: 2 